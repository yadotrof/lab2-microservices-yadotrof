{
	"info": {
		"_postman_id": "36ea2322-d1c6-4c01-8c46-d497679bdbe9",
		"name": "Services",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Warranty Service",
			"item": [
				{
					"name": "[warranty] Start warranty",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7c6b51e9-5260-438b-ab46-84be35f8d078",
								"exec": [
									"var uuid = require(\"uuid\");",
									"postman.setEnvironmentVariable(\"itemUid\", uuid.v4());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "31914c3e-d894-421f-9498-ed8a026d062f",
								"exec": [
									"pm.test(\"Start warranty\", function() {",
									"    pm.response.to.have.status(203)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{warrantyUrl}}/{{apiPath}}/warranty/{{itemUid}}",
							"host": [
								"{{warrantyUrl}}"
							],
							"path": [
								"{{apiPath}}",
								"warranty",
								"{{itemUid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[warranty] Warranty status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5a69fec1-82d2-4dcb-b95b-c0314b05ebb2",
								"exec": [
									"pm.test(\"Warranty status\", function() {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"    ",
									"    const response = pm.response.json();",
									"    const itemUid = pm.variables.get(\"itemUid\")",
									"    pm.expect(response.item_uuid).to.eq(itemUid)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{warrantyUrl}}/{{apiPath}}/warranty/{{itemUid}}",
							"host": [
								"{{warrantyUrl}}"
							],
							"path": [
								"{{apiPath}}",
								"warranty",
								"{{itemUid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[warranty] Request for warranty",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "540caf52-7464-4e17-94b3-4577dd09db12",
								"exec": [
									"pm.test(\"Request for warranty\", function() {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"    ",
									"    const response = pm.response.json();",
									"    pm.expect(response.decision).to.eq(\"RETURN\")",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reason\": \"It drowned\",\n    \"avaliable_count\": 2\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{warrantyUrl}}/{{apiPath}}/warranty/{{itemUid}}/warranty",
							"host": [
								"{{warrantyUrl}}"
							],
							"path": [
								"{{apiPath}}",
								"warranty",
								"{{itemUid}}",
								"warranty"
							]
						}
					},
					"response": []
				},
				{
					"name": "[warranty] Stop warranty",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d207bd88-3ed1-4441-9870-5ff47de0d7d0",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5c5ad9d8-00d0-4b15-9109-504af0951623",
								"exec": [
									"pm.test(\"Stop warranty\", function() {",
									"    pm.response.to.have.status(203)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{warrantyUrl}}/{{apiPath}}/warranty/{{itemUid}}",
							"host": [
								"{{warrantyUrl}}"
							],
							"path": [
								"{{apiPath}}",
								"warranty",
								"{{itemUid}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Warehouse Service",
			"item": [
				{
					"name": "[warehouse] Take item from Warehouse",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b33f4fb-85ae-4344-a502-9640607ae1d4",
								"exec": [
									"pm.test(\"Take item from Warehouse\", function() {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"    ",
									"    const response = pm.response.json();",
									"    const orderUid = pm.variables.get(\"orderUid\")",
									"    pm.expect(response.item_uuid).to.exist",
									"    pm.expect(response.order_uuid).to.eq(orderUid)",
									"    pm.expect(response.model).to.eq(\"Lego 8880\")",
									"    pm.expect(response.size).to.eq(\"L\")",
									"",
									"    pm.environment.set(\"orderItemUid\", response.item_uuid)",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "02c497c1-157c-45ff-a1b7-ca6d3abac465",
								"exec": [
									"var uuid = require(\"uuid\");",
									"postman.setEnvironmentVariable(\"orderUid\", uuid.v4());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"order_uuid\": \"{{orderUid}}\",\n    \"model\": \"Lego 8880\",\n    \"size\": \"L\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{warehouseUrl}}/{{apiPath}}/warehouse/",
							"host": [
								"{{warehouseUrl}}"
							],
							"path": [
								"{{apiPath}}",
								"warehouse",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "[warehouse] Get item info",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df0c9c8e-6710-4917-aedb-99d3fa69527b",
								"exec": [
									"pm.test(\"Get item info\", function() {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"    ",
									"    const response = pm.response.json();",
									"    pm.expect(response.model).to.eq(\"Lego 8880\")",
									"    pm.expect(response.size).to.eq(\"L\")",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0b7b9a9d-cc27-4775-b866-d58889d71e4d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{warehouseUrl}}/{{apiPath}}/warehouse/{{orderItemUid}}",
							"host": [
								"{{warehouseUrl}}"
							],
							"path": [
								"{{apiPath}}",
								"warehouse",
								"{{orderItemUid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[warehouse] Warranty Request",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cff23c4c-e023-477c-ba79-408d5f6c86e1",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c0d0d234-5d3d-4c96-bcb6-3b198eb72715",
								"exec": [
									"pm.test(\"Warranty request\", function() {",
									"    pm.response.to.have.status(404)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"    ",
									"    const response = pm.response.json();",
									"    const orderItemUid = pm.variables.get(\"orderItemUid\")",
									"    pm.expect(response.detail).to.eq(\"Not found.\")",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reason\": \"It drowned\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{warehouseUrl}}/{{apiPath}}/warehouse/{{orderItemUid}}/warranty",
							"host": [
								"{{warehouseUrl}}"
							],
							"path": [
								"{{apiPath}}",
								"warehouse",
								"{{orderItemUid}}",
								"warranty"
							]
						}
					},
					"response": []
				},
				{
					"name": "[warehouse] Return item",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cded740c-d3be-495c-99dc-e23e2a31b436",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "eb44fa43-9d1e-42dc-8374-0b20fbc0218e",
								"exec": [
									"pm.test(\"Return item\", function() {",
									"    pm.response.to.have.status(203)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{warehouseUrl}}/{{apiPath}}/warehouse/{{orderItemUid}}",
							"host": [
								"{{warehouseUrl}}"
							],
							"path": [
								"{{apiPath}}",
								"warehouse",
								"{{orderItemUid}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Order service",
			"item": [
				{
					"name": "[order] Create order",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "26319c00-990d-4308-b05b-611d771d4e79",
								"exec": [
									"var uuid = require(\"uuid\");",
									"postman.setEnvironmentVariable(\"userUid\", uuid.v4());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "470c8cbc-210d-484e-9e78-ab8eed68d002",
								"exec": [
									"pm.test(\"Create order\", function() {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"",
									"    const response = pm.response.json();",
									"    pm.expect(response.order_uuid).to.not.empty",
									"    pm.environment.set(\"orderUid\", response.order_uuid)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"model\": \"Lego 8880\",\n    \"size\": \"L\"\n}"
						},
						"url": {
							"raw": "{{orderUrl}}/{{apiPath}}/orders/{{userUid}}",
							"host": [
								"{{orderUrl}}"
							],
							"path": [
								"{{apiPath}}",
								"orders",
								"{{userUid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[order] User order info",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "729c147a-b125-457d-8169-878d5ab85b8e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c8c41ed3-ce0e-4c21-9fb2-57aa0b6215af",
								"exec": [
									"pm.test(\"User order info\", function() {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"    const response = pm.response.json();",
									"    const orderUid = pm.variables.get(\"orderUid\")",
									"    pm.expect(response.uuid).to.eq(orderUid)",
									"    pm.expect(response.item_uuid).to.not.empty",
									"    pm.expect(response.status).to.eq(\"PAID\")",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{orderUrl}}/{{apiPath}}/orders/{{userUid}}/{{orderUid}}",
							"host": [
								"{{orderUrl}}"
							],
							"path": [
								"{{apiPath}}",
								"orders",
								"{{userUid}}",
								"{{orderUid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[order] User orders info",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ad9c68d7-4f27-4c49-b0b7-c0db4cdaa7ed",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "94910d66-3821-4b22-9182-3f2fc6715edd",
								"exec": [
									"pm.test(\"User orders info\", function() {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"    const response = pm.response.json();",
									"    const orderUid = pm.variables.get(\"orderUid\")",
									"    pm.expect(response.length).to.eq(1)",
									"    pm.expect(response[0].uuid).to.eq(orderUid)",
									"    pm.expect(response[0].item_uuid).to.not.empty",
									"    pm.expect(response[0].status).to.eq(\"PAID\")",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{orderUrl}}/{{apiPath}}/orders/{{userUid}}",
							"host": [
								"{{orderUrl}}"
							],
							"path": [
								"{{apiPath}}",
								"orders",
								"{{userUid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[order] Warranty request",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "43bcd4c6-48e3-4999-a82f-01c3d46856d3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "71121bed-5cd6-4612-b1b7-21a7d941f311",
								"exec": [
									"pm.test(\"Warranty request\", function() {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"    const response = pm.response.json();",
									"    pm.expect(response.date).to.not.empty",
									"    pm.expect(response.decision).to.eq(\"RETURN\")",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reason\": \"It drowned\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{orderUrl}}/{{apiPath}}/orders/{{orderUid}}/warranty",
							"host": [
								"{{orderUrl}}"
							],
							"path": [
								"{{apiPath}}",
								"orders",
								"{{orderUid}}",
								"warranty"
							]
						}
					},
					"response": []
				},
				{
					"name": "[order] Return order",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "71615eaa-93d3-492f-ab3c-b45ca95d53f8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0e6d71e4-c771-49c6-8a72-63353ca4631c",
								"exec": [
									"pm.test(\"Return order\", function() {",
									"    pm.response.to.have.status(203)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{orderUrl}}/{{apiPath}}/orders/{{orderUid}}",
							"host": [
								"{{orderUrl}}"
							],
							"path": [
								"{{apiPath}}",
								"orders",
								"{{orderUid}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b4ab6a1a-db9c-41f4-8906-075e9aae723d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3c4ceb09-5206-4c01-b722-b54fe4c4e6d8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Store service",
			"item": [
				{
					"name": "[store] Purchase item",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fb2accbf-e299-4465-abf0-a806a09f80dc",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4772b218-51b1-47ea-ac97-6c29522b8d41",
								"exec": [
									"pm.test(\"Purchase item\", function() {",
									"    pm.response.to.have.status(201)",
									"    var location = pm.response.headers.get(\"Location\")",
									"    pm.expect(location).to.not.empty;",
									"    var orderUid = location.split(\"/\").pop()",
									"    pm.environment.set(\"orderUid\", orderUid)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"model\": \"Lego 8880\",\n    \"size\": \"L\"\n}"
						},
						"url": {
							"raw": "{{storeUrl}}/{{apiPath}}/store/{{mainUserUid}}/purchase",
							"host": [
								"{{storeUrl}}"
							],
							"path": [
								"{{apiPath}}",
								"store",
								"{{mainUserUid}}",
								"purchase"
							]
						}
					},
					"response": []
				},
				{
					"name": "[store] User order info",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "99220d66-b451-47b7-97e6-d2c366b2f919",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d9c549d2-ebdd-44a6-840d-6a94b47c2989",
								"exec": [
									"pm.test(\"User order info\", function() {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"    ",
									"    const response = pm.response.json();",
									"    const orderUid = pm.variables.get(\"orderUid\")",
									"    ",
									"    pm.expect(response.uuid).to.eq(orderUid)",
									"    pm.expect(response.date).to.not.empty",
									"    pm.expect(response.model).to.eq(\"Lego 8880\")",
									"    pm.expect(response.size).to.eq(\"L\")",
									"    pm.expect(response.warranty_date).to.not.empty",
									"    pm.expect(response.warranty_status).to.eq(\"ON_WARRANTY\")",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{storeUrl}}/{{apiPath}}/store/{{mainUserUid}}/{{orderUid}}",
							"host": [
								"{{storeUrl}}"
							],
							"path": [
								"{{apiPath}}",
								"store",
								"{{mainUserUid}}",
								"{{orderUid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[store] User orders",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4899ac08-89da-4a65-9cdc-5d03d54a0d72",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8537f9f6-5c88-4645-8e15-0cb77f096974",
								"exec": [
									"pm.test(\"User orders\", function() {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"    ",
									"    const response = pm.response.json();",
									"    pm.expect(response.length).to.greaterThan(0)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{storeUrl}}/{{apiPath}}/store/{{mainUserUid}}/orders",
							"host": [
								"{{storeUrl}}"
							],
							"path": [
								"{{apiPath}}",
								"store",
								"{{mainUserUid}}",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "[store] Warranty request",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b6c9a46b-b99e-4d6e-ae83-3a98fb5a81f9",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "11e96097-8826-4d5e-8b83-014498bbde12",
								"exec": [
									"pm.test(\"Warranty request\", function() {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"    ",
									"    const response = pm.response.json();",
									"    const orderUid = pm.variables.get(\"orderUid\")",
									"    ",
									"    pm.expect(response.date).to.not.empty",
									"    pm.expect(response.decision).to.eq(\"RETURN\")",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reason\": \"It drowned\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{storeUrl}}/{{apiPath}}/store/{{mainUserUid}}/{{orderUid}}/warranty",
							"host": [
								"{{storeUrl}}"
							],
							"path": [
								"{{apiPath}}",
								"store",
								"{{mainUserUid}}",
								"{{orderUid}}",
								"warranty"
							]
						}
					},
					"response": []
				},
				{
					"name": "[store] Return order",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "eb38b7ef-e9ed-4860-83eb-735224ed68e2",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "82ebe385-aea9-4fb1-a4ef-8d3abf2f951a",
								"exec": [
									"pm.test(\"Return order\", function() {",
									"    pm.response.to.have.status(203)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{storeUrl}}/{{apiPath}}/store/{{mainUserUid}}/{{orderUid}}/refund",
							"host": [
								"{{storeUrl}}"
							],
							"path": [
								"{{apiPath}}",
								"store",
								"{{mainUserUid}}",
								"{{orderUid}}",
								"refund"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}
